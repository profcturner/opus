#!/bin/sh
# postrm script for opus
#
# see: dh_installdeb(1)

set -e

if [ -f /usr/share/debconf/confmodule ]; then
    . /usr/share/debconf/confmodule
fi
if [ -f /usr/share/dbconfig-common/dpkg/postrm.mysql ]; then
    . /usr/share/dbconfig-common/dpkg/postrm.mysql
    dbc_go opus $@
fi

# summary of how this script can be called:
#        * <postrm> `remove'
#        * <postrm> `purge'
#        * <old-postrm> `upgrade' <new-version>
#        * <new-postrm> `failed-upgrade' <old-version>
#        * <new-postrm> `abort-install'
#        * <new-postrm> `abort-install' <old-version>
#        * <new-postrm> `abort-upgrade' <old-version>
#        * <disappearer's-postrm> `disappear' <overwriter>
#          <overwriter-version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
    purge|remove|upgrade|failed-upgrade|abort-install|abort-upgrade|disappear)
    ;;

    *)
        echo "postrm called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# Code for removal of package, remember, this might be a precursor to an upgrade only
if [ $1 = "remove" ]
then
  # Remove any symlink we may have added to apache2
  if [ -e /etc/apache2/conf.d/opus.conf ]
  then
    rm /etc/apache2/conf.d/opus.conf
  fi
  # And similarly, one from the include directory
  if [ -e /usr/share/opus/include/config.php ]
  then
    rm /usr/share/opus/include/config.php
  fi
  # Remove compiled templates
  if [ -e /var/lib/opus/templates_c ]
  then
    rm -rf /var/lib/opus/templates_c
  fi
fi

# Code for purge
if [ $1 = "purge" ]
then
  # remove the log directories
  if [ -e /var/log/opus ]
  then
    echo "Removing OPUS log files ..."
    rm -rf /var/log/opus
  fi

  rm -f /etc/opus/opus-database.php
  if which ucf >/dev/null 2>&1; then
          ucf --purge /etc/opus/opus-database.php
  fi

  if [ -e /etc/opus/debconf_config.php ]
  then
    echo "Removing debconf generated files ..."
    rm /etc/opus/debconf_config.php
  fi

fi

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0


